{"openapi": "3.0.3", "info": {"title": "RSS Reader API", "version": "1.0.0", "description": "Rss Reader Management API"}, "paths": {"/api/v1/feeds/feed-items/{feed_id}/": {"post": {"operationId": "feeds_feed_items_create", "description": "Get list of feed item for one feed.", "parameters": [{"in": "path", "name": "feed_id", "schema": {"type": "string", "format": "uuid"}, "required": true}], "tags": ["feeds"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedItem"}}, "application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/FeedItem"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/FeedItem"}}}, "required": true}, "security": [{"Token Authorization": []}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedItem"}}}, "description": ""}}}}, "/api/v1/feeds/fetch/notification/": {"get": {"operationId": "feeds_fetch_notification_retrieve", "description": "User fetch feed notifications.", "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/feeds/filter/feed-items/": {"get": {"operationId": "feeds_filter_feed_items_retrieve", "description": "Build a filter for read and unread feeds.", "parameters": [{"in": "query", "name": "feed_id", "schema": {"type": "string", "format": "uuid"}, "required": false}, {"in": "query", "name": "filter_type", "schema": {"type": "string", "format": "uuid"}, "required": true}], "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedItem"}}}, "description": ""}}}}, "/api/v1/feeds/follow/{feed_id}/": {"post": {"operationId": "feeds_follow_create", "description": "User follow a feed.", "parameters": [{"in": "path", "name": "feed_id", "schema": {"type": "string", "format": "uuid"}, "required": true}], "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/feeds/force/update/": {"post": {"operationId": "feeds_force_update_create", "description": "User force feed update.", "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/feeds/mark-read/{feed_item_id}/": {"post": {"operationId": "feeds_mark_read_create", "description": "User mark a feed item as read.", "parameters": [{"in": "path", "name": "feed_item_id", "schema": {"type": "string", "format": "uuid"}, "required": true}], "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/feeds/register/": {"post": {"operationId": "feeds_register_create", "description": "Register a feed by a user.", "tags": ["feeds"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegisterFeed"}}, "application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/RegisterFeed"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/RegisterFeed"}}}, "required": true}, "security": [{"Token Authorization": []}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegisterFeed"}}}, "description": ""}}}}, "/api/v1/feeds/registered/": {"get": {"operationId": "feeds_registered_retrieve", "description": "Get feed registered to this user.", "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Feed"}}}, "description": ""}}}}, "/api/v1/feeds/unfollow/{feed_id}/": {"post": {"operationId": "feeds_unfollow_create", "description": "User unfollow a feed.", "parameters": [{"in": "path", "name": "feed_id", "schema": {"type": "string", "format": "uuid"}, "required": true}], "tags": ["feeds"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/users/login/": {"post": {"operationId": "users_login_create", "description": "User login.", "tags": ["users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLogin"}}, "application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/UserLogin"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/UserLogin"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLogin"}}}, "description": ""}}}}, "/api/v1/users/logout/": {"post": {"operationId": "users_logout_create", "description": "User logout.", "tags": ["users"], "security": [{"Token Authorization": []}], "responses": {"200": {"description": "No response body"}}}}, "/api/v1/users/register/": {"post": {"operationId": "users_register_create", "description": "User register.", "tags": ["users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}, "application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/UserRegister"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "description": ""}}}}}, "components": {"schemas": {"Feed": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 50}, "url": {"type": "string", "format": "uri", "maxLength": 200}, "datetime_created": {"type": "string", "format": "date-time", "readOnly": true, "title": "Created at"}, "datetime_updated": {"type": "string", "format": "date-time", "readOnly": true, "title": "Last update at"}}, "required": ["datetime_created", "datetime_updated", "id", "name", "url"]}, "FeedItem": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "title": {"type": "string", "maxLength": 250}, "content": {"type": "string"}, "url": {"type": "string", "format": "uri", "maxLength": 200}, "author": {"type": "string", "maxLength": 250}, "published_time": {"type": "string", "format": "date-time", "nullable": true, "title": "Published at"}, "datetime_created": {"type": "string", "format": "date-time", "readOnly": true, "title": "Created at"}, "datetime_updated": {"type": "string", "format": "date-time", "readOnly": true, "title": "Last update at"}}, "required": ["datetime_created", "datetime_updated", "id", "title"]}, "RegisterFeed": {"type": "object", "properties": {"name": {"type": "string", "maxLength": 50}, "url": {"type": "string", "format": "uri", "maxLength": 200}}, "required": ["name", "url"]}, "UserLogin": {"type": "object", "properties": {"email": {"type": "string", "format": "email"}, "password": {"type": "string"}}, "required": ["email", "password"]}, "UserRegister": {"type": "object", "properties": {"first_name": {"type": "string", "maxLength": 200}, "last_name": {"type": "string", "maxLength": 200}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "password": {"type": "string", "maxLength": 128}}, "required": ["email", "first_name", "last_name", "password"]}}, "securitySchemes": {"Token Authorization": {"type": "apiKey", "in": "header", "name": "Authorization", "description": "Token-based authentication with required prefix \"Token\".\n \n After user registration or login a token is returned which will be used in the token."}}}}